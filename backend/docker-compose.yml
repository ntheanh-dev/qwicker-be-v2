version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - mysqldb
    environment:
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/qwickerdb?allowPublicKeyRetrieval=true
#    restart: always
    ports:
      - '8081:8080'
    networks:
      - app-network

  mysqldb:
    image: mysql:8.0.33-oracle
    ports:
      - '3307:3306'
    volumes:
      - ~/Documents/data/mysql/data:/var/lib/mysql
      - ./scripts/database/:/docker-entrypoint-initdb.d/
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=Admin@123
      - MYSQL_DATABASE=qwickerdb
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: always
    depends_on:
      - backend
    networks:
      - app-network

  redis:
    image: redis:7.4
    container_name: redis
    volumes:
      - ~/Documents/data/redis/data/:/data
    ports:
      - "6380:6379"
    restart: always
    depends_on:
      - mysqldb
    networks:
      - app-network

#  rabbitmq:
#    image: rabbitmq:3.10-management
#    container_name: rabbitmq
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#      - "61613:61613"
#    volumes:
#      - ~/Documents/data/rabbitmq/data/:/var/lib/rabbitmq
#      - ~/Documents/data/rabbitmq/log/:/var/log/rabbitmq
#    restart: always
#    networks:
#      - app-network

networks:
  app-network:
    driver: bridge
